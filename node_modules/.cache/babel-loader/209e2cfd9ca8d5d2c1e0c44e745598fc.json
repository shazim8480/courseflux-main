{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shazim\\\\Desktop\\\\CourseFlux\\\\courseflux-main\\\\src\\\\components\\\\Authentication\\\\SignUp\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport signUpStyles from \"./SignUpStyle\"; // import { useState } from \"react\";\n\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { UserContext } from \"../../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Copyright() {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    children: [\"Copyright Â© \", /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"/home\",\n      children: \"Course Flux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), \" \", new Date().getFullYear(), \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Copyright;\n\nconst SignUp = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const classes = signUpStyles(); // use context api from app.js////////////////////\n\n  const [loggedInUser] = useContext(UserContext); // validation using yup //\n\n  const schema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup.string().email().required(),\n    password: yup.string().min(4).max(15).required(),\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null])\n  }); // use form hook destructuring//\n\n  const {\n    control,\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  }); // to redirect to inner pages after authentication//\n\n  const history = useHistory();\n  const location = useLocation();\n  let {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/courses\"\n    }\n  }; //////////////////////////////////////////////////////////////////\n  // sign up button onclick directory. Will delete when firebase auth is complete//\n\n  const handleBtnClick = () => {\n    history.push(\"/courses\");\n  }; ////////////////////////////////////////////////////////////////\n  // firebase auth part start //\n  //handle submit function //\n\n\n  function onSubmit(user) {\n    console.log(user);\n    user.preventDefault();\n  } // firebase auth part end //\n  ////////////////////////////////////////////////////////////////\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          render: ({\n            props\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...props,\n            className: classes.formTextField,\n            label: \"Full Name\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            color: \"secondary\",\n            fullWidth: true,\n            autoFocus: true,\n            id: \"name\",\n            ...register(\"name\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this),\n          name: \"name\",\n          control: control,\n          defaultValue: loggedInUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          render: ({\n            props\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...props,\n            className: classes.formTextField,\n            label: \"Email Address\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            color: \"secondary\",\n            fullWidth: true,\n            autoFocus: true,\n            id: \"email\",\n            ...register(\"email\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this),\n          name: \"email\",\n          control: control,\n          defaultValue: loggedInUser.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.errorText,\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          render: ({\n            props\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...props,\n            className: classes.formTextField,\n            label: \"Password\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            color: \"secondary\",\n            type: \"password\",\n            id: \"password\",\n            fullWidth: true,\n            ...register(\"password\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this),\n          name: \"password\",\n          control: control,\n          defaultValue: loggedInUser.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.errorText,\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          render: ({\n            props\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...props,\n            className: classes.formTextField,\n            label: \"Confirm Password\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            color: \"secondary\",\n            type: \"password\",\n            id: \"confirmPassword\",\n            fullWidth: true,\n            ...register(\"confirmPassword\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this),\n          name: \"password\",\n          control: control,\n          defaultValue: loggedInUser.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.errorText,\n          children: errors.confirmPassword && \"Passwords Should Match!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\" // will re-activate when auth is complete//\n          ,\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"secondary\",\n          className: classes.submitBtn,\n          onClick: () => handleBtnClick(),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/login\",\n              variant: \"body2\",\n              color: \"textPrimary\",\n              children: \"Already have an account? Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 8,\n      children: /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"9cxRFyHLlTjGNLzLjJOrrF18Ylg=\", false, function () {\n  return [useForm, useHistory, useLocation];\n});\n\n_c2 = SignUp;\nexport default SignUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Shazim/Desktop/CourseFlux/courseflux-main/src/components/Authentication/SignUp/SignUp.js"],"names":["React","useContext","Avatar","Button","CssBaseline","TextField","Link","Grid","Box","LockOutlinedIcon","Typography","Container","signUpStyles","useForm","Controller","yupResolver","yup","useHistory","useLocation","UserContext","Copyright","Date","getFullYear","SignUp","classes","loggedInUser","schema","object","shape","name","string","required","email","password","min","max","confirmPassword","oneOf","ref","control","handleSubmit","register","formState","errors","resolver","history","location","from","state","pathname","handleBtnClick","push","onSubmit","user","console","log","preventDefault","paper","avatar","form","props","formTextField","errorText","message","submitBtn"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport signUpStyles from \"./SignUpStyle\";\r\n\r\n// import { useState } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { UserContext } from \"../../../App\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"/home\">\r\n        Course Flux\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst SignUp = () => {\r\n  const classes = signUpStyles();\r\n  // use context api from app.js////////////////////\r\n  const [loggedInUser] = useContext(UserContext);\r\n\r\n  // validation using yup //\r\n  const schema = yup.object().shape({\r\n    name: yup.string().required(),\r\n    email: yup.string().email().required(),\r\n    password: yup.string().min(4).max(15).required(),\r\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null]),\r\n  });\r\n  // use form hook destructuring//\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    register,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  // to redirect to inner pages after authentication//\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  let { from } = location.state || { from: { pathname: \"/courses\" } };\r\n\r\n  //////////////////////////////////////////////////////////////////\r\n\r\n  // sign up button onclick directory. Will delete when firebase auth is complete//\r\n  const handleBtnClick = () => {\r\n    history.push(\"/courses\");\r\n  };\r\n  ////////////////////////////////////////////////////////////////\r\n  // firebase auth part start //\r\n  //handle submit function //\r\n  function onSubmit(user) {\r\n    console.log(user);\r\n    user.preventDefault();\r\n  }\r\n  // firebase auth part end //\r\n  ////////////////////////////////////////////////////////////////\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n\r\n        {/* sign up form part start */}\r\n        <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\r\n          <Controller\r\n            render={({ props }) => (\r\n              <TextField\r\n                {...props}\r\n                className={classes.formTextField}\r\n                label=\"Full Name\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                autoFocus\r\n                id=\"name\"\r\n                {...register(\"name\")}\r\n              />\r\n            )}\r\n            name=\"name\"\r\n            control={control}\r\n            defaultValue={loggedInUser.name}\r\n          />\r\n\r\n          <Controller\r\n            render={({ props }) => (\r\n              <TextField\r\n                {...props}\r\n                className={classes.formTextField}\r\n                label=\"Email Address\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                autoFocus\r\n                id=\"email\"\r\n                {...register(\"email\")}\r\n              />\r\n            )}\r\n            name=\"email\"\r\n            control={control}\r\n            defaultValue={loggedInUser.email}\r\n          />\r\n          {errors?.email && (\r\n            <span className={classes.errorText}>{errors.email?.message}</span>\r\n          )}\r\n\r\n          <Controller\r\n            render={({ props }) => (\r\n              <TextField\r\n                {...props}\r\n                className={classes.formTextField}\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                color=\"secondary\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                fullWidth\r\n                {...register(\"password\")}\r\n              />\r\n            )}\r\n            name=\"password\"\r\n            control={control}\r\n            defaultValue={loggedInUser.password}\r\n          />\r\n          {errors?.password && (\r\n            <span className={classes.errorText}>\r\n              {errors.password?.message}\r\n            </span>\r\n          )}\r\n\r\n          <Controller\r\n            render={({ props }) => (\r\n              <TextField\r\n                {...props}\r\n                className={classes.formTextField}\r\n                label=\"Confirm Password\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                color=\"secondary\"\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                fullWidth\r\n                {...register(\"confirmPassword\")}\r\n              />\r\n            )}\r\n            name=\"password\"\r\n            control={control}\r\n            defaultValue={loggedInUser.confirmPassword}\r\n          />\r\n\r\n          <span className={classes.errorText}>\r\n            {errors.confirmPassword && \"Passwords Should Match!\"}\r\n          </span>\r\n          {/* sign up form part end */}\r\n\r\n          {/* sign up button part */}\r\n          <Button\r\n            type=\"submit\"\r\n            // will re-activate when auth is complete//\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submitBtn}\r\n            onClick={() => handleBtnClick()}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\" color=\"textPrimary\">\r\n                {\"Already have an account? Sign In\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}