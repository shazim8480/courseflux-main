{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shazim\\\\Desktop\\\\CourseFlux\\\\courseflux-main\\\\src\\\\components\\\\Authentication\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport loginStyles from \"./LoginStyle\"; // import { useState } from \"react\";\n\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router\";\nimport { UserContext } from \"../../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Copyright() {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    children: [\"Copyright Â© \", /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"/home\",\n      children: \"Course Flux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), \" \", new Date().getFullYear(), \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Copyright;\n\nconst Login = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const classes = loginStyles(); // use context api from app.js////////////////////\n\n  const [loggedInUser] = useContext(UserContext); // validation using yup //\n\n  const schema = yup.object().shape({\n    email: yup.string().email().required(),\n    password: yup.string().min(4).max(15).required()\n  }); // use form hook destructuring//\n\n  const {\n    control,\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  }); // to redirect to inner pages after authentication//\n\n  const history = useHistory(); // const location = useLocation();\n  // let { from } = location.state || { from: { pathname: \"/\" } };\n  //////////////////////////////////////////////////////////////////\n  // sign up button onclick directory. Will delete when firebase auth is complete//\n\n  const handleBtnClick = () => {\n    history.push(\"/courses\");\n  }; ////////////////////////////////////////////////////////////////\n  // firebase auth part start //\n  //handle submit function //\n\n\n  function onSubmit(user) {\n    console.log(user);\n    user.preventDefault();\n  } // firebase auth part end //\n  ////////////////////////////////////////////////////////////////\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          render: ({\n            props\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...props,\n            className: classes.formTextField,\n            label: \"Email Address\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            color: \"secondary\",\n            fullWidth: true,\n            autoFocus: true,\n            id: \"email\",\n            ...register(\"email\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this),\n          name: \"email\",\n          control: control,\n          defaultValue: loggedInUser.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.errorText,\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          render: ({\n            props\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...props,\n            className: classes.formTextField,\n            label: \"Password\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            color: \"secondary\",\n            type: \"password\",\n            id: \"password\",\n            fullWidth: true,\n            ...register(\"password\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this),\n          name: \"password\",\n          control: control,\n          defaultValue: loggedInUser.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.errorText,\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button // type=\"submit\" will re-activate when auth is complete//\n        , {\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"secondary\",\n          className: classes.submitBtn,\n          onClick: () => handleBtnClick(),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              variant: \"body2\",\n              color: \"textPrimary\",\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/signUp\",\n              variant: \"body2\",\n              color: \"textPrimary\",\n              children: \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 8,\n      children: /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"1NlstPgAxIIALxI10kTLmyI29l4=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c2 = Login;\nexport default Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["C:/Users/Shazim/Desktop/CourseFlux/courseflux-main/src/components/Authentication/Login/Login.js"],"names":["React","useContext","Avatar","Button","CssBaseline","TextField","Link","Grid","Box","LockOutlinedIcon","Typography","Container","loginStyles","useForm","Controller","yupResolver","yup","useHistory","UserContext","Copyright","Date","getFullYear","Login","classes","loggedInUser","schema","object","shape","email","string","required","password","min","max","control","handleSubmit","register","formState","errors","resolver","history","handleBtnClick","push","onSubmit","user","console","log","preventDefault","paper","avatar","form","props","formTextField","errorText","message","submitBtn"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport loginStyles from \"./LoginStyle\";\r\n\r\n// import { useState } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useHistory } from \"react-router\";\r\nimport { UserContext } from \"../../../App\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"/home\">\r\n        Course Flux\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst Login = () => {\r\n  const classes = loginStyles();\r\n  // use context api from app.js////////////////////\r\n  const [loggedInUser] = useContext(UserContext);\r\n\r\n  // validation using yup //\r\n  const schema = yup.object().shape({\r\n    email: yup.string().email().required(),\r\n    password: yup.string().min(4).max(15).required(),\r\n  });\r\n  // use form hook destructuring//\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    register,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  // to redirect to inner pages after authentication//\r\n  const history = useHistory();\r\n  // const location = useLocation();\r\n  // let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  //////////////////////////////////////////////////////////////////\r\n\r\n  // sign up button onclick directory. Will delete when firebase auth is complete//\r\n  const handleBtnClick = () => {\r\n    history.push(\"/courses\");\r\n  };\r\n  ////////////////////////////////////////////////////////////////\r\n  // firebase auth part start //\r\n  //handle submit function //\r\n  function onSubmit(user) {\r\n    console.log(user);\r\n    user.preventDefault();\r\n  }\r\n  // firebase auth part end //\r\n  ////////////////////////////////////////////////////////////////\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n\r\n        {/* sign up form part start */}\r\n        <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\r\n          <Controller\r\n            render={({ props }) => (\r\n              <TextField\r\n                {...props}\r\n                className={classes.formTextField}\r\n                label=\"Email Address\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                autoFocus\r\n                id=\"email\"\r\n                {...register(\"email\")}\r\n              />\r\n            )}\r\n            name=\"email\"\r\n            control={control}\r\n            defaultValue={loggedInUser.email}\r\n          />\r\n          {errors?.email && (\r\n            <span className={classes.errorText}>{errors.email?.message}</span>\r\n          )}\r\n\r\n          <Controller\r\n            render={({ props }) => (\r\n              <TextField\r\n                {...props}\r\n                className={classes.formTextField}\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                color=\"secondary\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                fullWidth\r\n                {...register(\"password\")}\r\n              />\r\n            )}\r\n            name=\"password\"\r\n            control={control}\r\n            defaultValue={loggedInUser.password}\r\n          />\r\n          {errors?.password && (\r\n            <span className={classes.errorText}>\r\n              {errors.password?.message}\r\n            </span>\r\n          )}\r\n\r\n          {/* sign up form part end */}\r\n\r\n          {/* sign up button part */}\r\n          <Button\r\n            // type=\"submit\" will re-activate when auth is complete//\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submitBtn}\r\n            onClick={() => handleBtnClick()}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\" color=\"textPrimary\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/signUp\" variant=\"body2\" color=\"textPrimary\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}